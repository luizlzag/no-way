<div class="image-with-textv2-container-{{ section.id }} page-width">
    <div class="content-image-with-text-{{ section.id }}">
        <div class="media-container-{{ section.id }}">
            {% if section.settings.media_type == 'video' and section.settings.video_url != blank %}
                <div class="video-wrapper-{{ section.id }}">
                    {{ section.settings.video_url | video_tag: image_size: '646x363', autoplay: false, loop: false, muted: true, controls: false}}
                    <div class="video-play-icon-{{ section.id }}">
                        <svg xmlns="http://www.w3.org/2000/svg" width="80" height="81" viewBox="0 0 80 81" fill="none"><path fill-rule="evenodd" clip-rule="evenodd" d="M61.5 34.4367C66.1667 37.131 66.1667 43.8668 61.5 46.5611L31.5 63.8816C26.8333 66.5759 21 63.208 21 57.8194L21 23.1784C21 17.7898 26.8333 14.4219 31.5 17.1162L61.5 34.4367ZM58.5 41.3649C59.1667 40.98 59.1667 40.0178 58.5 39.6329L28.5 22.3124C27.8333 21.9275 27 22.4086 27 23.1784L27 57.8194C27 58.5892 27.8333 59.0704 28.5 58.6855L58.5 41.3649Z" fill="#656E52"/></svg>
                    </div>
                </div>
            {% else %}
                <img src="{{ section.settings.image | image_url: width: 800, height: 800 }}" alt="{{ section.settings.image.alt | escape }}" width="646" height="363" loading="lazy" />
            {% endif %}
        </div>
        <div class="text-infos-{{ section.id }} strong-color">
             {% if section.settings.subtitle != blank %}
                <p class="subtitle-section">{{ section.settings.subtitle }}</p>
             {% endif %}
            <h2 class="title-section">{{ section.settings.title }}</h2>
            <p class="description">{{ section.settings.description }}</p>
            {% for block in section.blocks %}
                {% case block.type %}
                    {% when 'button' %}
                        <a href="{{ block.settings.button_link }}" class="button-custom-{{ section.id }}" style="background-color: {{ block.settings.button_background_color }}; color: {{ block.settings.button_text_color }};">
                            {{ block.settings.button_text }}
                            {% if block.settings.button_icon_svg != blank %}
                                <span class="button-icon-{{ section.id }}">{{ block.settings.button_icon_svg }}</span>
                            {% endif %}
                        </a>
                {% endcase %}
            {% endfor %}
        </div>
    </div>
</div>

<style>
    .image-with-textv2-container-{{ section.id }} {
        padding-top: {{ section.settings.padding_top }}px;
        padding-bottom: {{ section.settings.padding_bottom }}px;
    }
    .content-image-with-text-{{ section.id }}{
        display: flex;
        gap: 60px;
        align-items: center;
        justify-content: space-between;
        {% if section.settings.layout_desktop == 'text_first' %}
            flex-direction: row-reverse;
        {% endif %}
    } 
    .text-infos-{{ section.id }},
    .media-container-{{ section.id }} {
        flex: 1;
    }
    .text-infos-{{ section.id }} p{
        align-self: stretch;
        color: var(--Gray-300, #7C7C83);
        margin-top: 24px;
    }
    .media-container-{{ section.id }} img,
    .media-container-{{ section.id }} video {
        width: 100%;
        height: auto;
        aspect-ratio: 16 / 9; /* Mantém a proporção de 16:9, ajuste se necessário */
        border-radius: 16px;
        object-fit: cover;
        display: block;
    }
    .video-wrapper-{{ section.id }} iframe {
        width: 100%;
        height: 100%;
        border-radius: 16px;
    }
    .video-wrapper-{{ section.id }} {
        position: relative;
        cursor: pointer;
        line-height: 0; /* Garante que não haja espaço extra que desalinhe o ícone */
    }
    .video-play-icon-{{ section.id }} {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 1;
        pointer-events: none;
        transition: opacity 0.3s ease;
    }
    .video-play-icon-{{ section.id }}.hidden {
        opacity: 0;
    }
    .button-custom-{{ section.id }} {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 8px;
        padding: 12px 24px;
        border-radius: 8px;
        text-decoration: none;
        font-weight: bold;
        margin-top: 32px;
        transition: opacity 0.3s ease;
    }
    .button-custom-{{ section.id }}:hover {
        opacity: 0.85;
    }
    .button-icon-{{ section.id }} svg {
        width: 20px;
        height: 20px;
    }

    @media screen and (max-width: 768px) {
        .content-image-with-text-{{ section.id }}{
            flex-direction: column;
        }
        .text-infos-{{ section.id }}{
            order: 1;
        }
        .media-container-{{ section.id }}{
            order: 2;
        }
        .media-container-{{ section.id }} img,
        .media-container-{{ section.id }} video {
            width: 100%;
            height: auto;
            margin: 0 auto;
        }
    }
</style>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        const videoWrapper = document.querySelector('.video-wrapper-{{ section.id }}');

        if (videoWrapper) {
            const iframe = videoWrapper.querySelector('iframe');
            const playIcon = videoWrapper.querySelector('.video-play-icon-{{ section.id }}');

            videoWrapper.addEventListener('click', function() {
                if (iframe) {
                    let videoSrc = iframe.src;
                    const separator = videoSrc.includes('?') ? '&' : '?';
                    
                    // Adiciona parâmetros para autoplay e controles
                    if (!videoSrc.includes('autoplay=1')) {
                        videoSrc += `${separator}autoplay=1&controls=1`;
                    }
                    
                    iframe.src = videoSrc;
                    playIcon.classList.add('hidden');

                    // Remove o ícone do DOM após o início para não interferir nos controles do player
                    setTimeout(() => playIcon.remove(), 500);
                }
            });
        }
    });
</script>

{% schema %}
    {
        "name": "Image with Text v2",
        "settings": [
            
            {
                "type": "image_picker",
                "id": "image",
                "label": "Imagem"
            },
            {
                "type": "video",
                "id": "video_url",
                "label": "URL do Vídeo",
            },
             {
                "type": "select",
                "id": "media_type",
                "label": "Tipo de mídia",
                "options": [
                    { "value": "image", "label": "Imagem" },
                    { "value": "video", "label": "Vídeo" }
                ],
                "default": "image",
                "info": "Escolha se deseja exibir uma imagem ou um vídeo."
            },
            {
                "type": "text",
                "id": "subtitle",
                "label": "Subtitulo"
            },
            {
                "type": "richtext",
                "id": "title",
                "label": "Title"
            },
            {
                "type": "text",
                "id": "description",
                "label": "Description"
            }, {
                "type": "select",
                "id": "layout_desktop",
                "label": "Layout no Desktop",
                "options": [
                    {
                        "value": "image_first",
                        "label": "Imagem primeiro"
                    }, {
                        "value": "text_first",
                        "label": "Texto primeiro"
                    }
                ],
                "default": "image_first"
            },
            {
                "type": "range",
                "id": "padding_top",
                "min": 0,
                "max": 100,
                "step": 4,
                "unit": "px",
                "label": "Espaçamento superior",
                "default": 36
            },
            {
                "type": "range",
                "id": "padding_bottom",
                "min": 0,
                "max": 100,
                "step": 4,
                "unit": "px",
                "label": "Espaçamento inferior",
                "default": 36
            }
        ],
        "blocks": [
            {
                "type": "button",
                "name": "Botão",
                "limit": 2,
                "settings": [
                    {
                        "type": "text",
                        "id": "button_text",
                        "label": "Texto do botão",
                        "default": "Saiba mais"
                    },
                    {
                        "type": "url",
                        "id": "button_link",
                        "label": "Link do botão"
                    },
                    {
                        "type": "textarea",
                        "id": "button_icon_svg",
                        "label": "Ícone SVG (opcional)",
                        "info": "Cole o código SVG completo aqui."
                    },
                    {
                        "type": "color",
                        "id": "button_background_color",
                        "label": "Cor de fundo do botão",
                        "default": "#656E52"
                    },
                    {
                        "type": "color",
                        "id": "button_text_color",
                        "label": "Cor do texto do botão",
                        "default": "#FFFFFF"
                    }
                ]
            }
        ],"presets": [
            {
                "name": "Image with Text v2"
            }
        ]
    }
{% endschema %}
